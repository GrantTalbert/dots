global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'

endglobal

context "math()"
snippet `(b|B|p|v|V)mat` "matrix sorta" wrA
\begin{`!p snip.rv = match.group(1)`matrix}
	$1
\end{`!p snip.rv = match.group(1)`matrix} $0
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
	$0
\\end{$1}
endsnippet

context "math()"
priority 100
snippet ... "ldots" iA
\ldots
endsnippet

context "math()"
snippet ~> "rightsquigarrow" iA
\rightsquigarrow $0
endsnippet

snippet fig "Figure environment" b
\begin{figure}[${1:htpb}]
	\centering
	${2:\includegraphics[width=0.8\textwidth]{$3}}
	\caption{${4:$3}}
	\label{fig:${5:${3/\W+/-/g}}}
\end{figure}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

context "math()"
snippet => "implies" Ai
\implies $0
endsnippet

context "math()"
snippet =< "implied by" Ai
\impliedby
endsnippet

#---------------------------------------------------------------------------------------------------
context "math()"
snippet iff "iff" Ai
\iff
endsnippet

snippet fm "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ', ':', ';']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
	${1:${VISUAL}}
.\]
$0
endsnippet

snippet sm "Math" bA
\begin{equation}\label{eq:$1}
	${2:${VISUAL}}
.\end{equation}
$0
endsnippet

snippet cm "tikzcd" bA
\[\begin{tikzcd}[row sep=${1:2.5}em, column sep=${2:3.5}em]
	$3
\end{tikzcd}\]
$0
endsnippet

snippet align "Align" bA
\begin{align*}
	${1:${VISUAL}}
.\end{align*}
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "symbol frac" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
context "math()"
snippet '^.*\)/' "() frac" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i-=1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sympy "sympyblock " w
sympy $1 sympy$0
endsnippet

priority 10000
snippet 'sympy(.*)sympy' "sympy" wr
`!p
from sympy import *
x, y, z, t = symbols('x y z t')
k, m, n = symbols('k m n', integer=True)
f, g, h = symbols('f g h', cls=Function)
init_printing()
snip.rv = eval('latex(' + match.group(1).replace('\\', '').replace('^', '**').replace('{', '(').replace('}', ')') + ')')
`
endsnippet

priority 1000
snippet math "mathematicablock" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "math" wr
`!p
import subprocess
code = match.group(1)
code = 'ToString[' + code + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

context "math()"
snippet == "equiv" iA
\equiv $0
endsnippet

context "math()"
snippet `!=|(?<!\\)neq` "not equal" rA
\neq $0
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet flr "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet () "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet lrd "left( right)" iA
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet abs "left| right|" iA
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet lra "left\{ right\}" iA
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet lrb "left[ right]" iA
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet lr, "leftangle rightangle" iA
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

context "math()"
snippet lr. "leftangle rightangle" iA
\left<${1:${VISUAL}} \right>$0
endsnippet

context "math()"
snippet `(n|N)orm` "Norm" riA
\left\lVert $1 \right\rVert $0
endsnippet

context "math()"
snippet conj "conjugate" iA
\overline{$1}$0
endsnippet

context "math()"
snippet `(?<!\\)sum` "sum" rA
\sum_{${1:i}} $0
endsnippet

context "math()"
snippet Sum "sum" wA
\sum_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet lim "limit" wA
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet lsup "limsup" wA
\limsup_{${1:n} \to ${2:\infty}} 
endsnippet

priority 300
context "math()"
snippet linf "liminf" wA
\liminf_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet prod "product" wA
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet prd "product" wA
\prod $0
endsnippet

context "math()"
snippet pt "\partial" iA
\partial $0
endsnippet

context "math()"
snippet pdif "d/dx" wA
\frac{\partial ${1:f}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet dif "d/dx" wA
\frac{\mathrm{d}${1:y}}{\mathrm{d}${2:x}} $0
endsnippet

context "math()"
snippet sq "\sqrt{}" iA
\sqrt{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet td "to the ... power" iA
^{$1}$0
endsnippet

context "math()"
snippet rd "to the ... power" iA
^{($1)}$0
endsnippet

snippet __ "subscript" iA
_{$1}$0
endsnippet

snippet ooo "\infty" iA
\infty
endsnippet

context "math()"
snippet `>=|(?<!\\)geq` "greater or equal to" riA
\geq $0
endsnippet

context "math()"
snippet `<=|(?<!\\)leq` "less or equal to" riA
\leq $0
endsnippet

context "math()"
snippet EE "exists" iA
\exists 
endsnippet

context "math()"
snippet AA "forall" iA
\forall 
endsnippet

snippet R0+ "R0+" iA
\\mathbb{R}_0^+
endsnippet

priority 200
context "math()"
snippet `(?<!\\)([a-zA-Z])(c|C)al` "mathcal" rA
\mathcal{`!p snip.rv = match.group(1).upper()`} $0
endsnippet

snippet `(\\?\w+)(b|B)f` "textbf" rA
\textbf{`!p snip.rv = match.group(1)`} $0
endsnippet

context "math()"
snippet rm "mathrm" iA
\mathrm{$1} $0
endsnippet

context "math()"
snippet mod "modulo" iA
\mod{$1} $0
endsnippet

context "math()"
snippet rcat "R-Mod" iA
\Rmod{${1:R}} $0
endsnippet

context "math()"
snippet vect "k-Vect" iA
\Vect{${1:k}} $0
endsnippet

context "math()"
snippet `([a-zA-Z])(s|S)cr` "mathscr" riA
\mathscr{`!p snip.rv = match.group(1).upper()`} $0
endsnippet

context "math()"
snippet fk "\mathfrak{}" iA
\mathfrak{$1} $0
endsnippet

context "math()"
snippet `(\\\\)([a-zA-Z])` "mathbb" rA
\mathbb{`!p snip.rv = match.group(2).upper()`}
endsnippet

context "math()"
snippet `(\\?[a-zA-Z0]\w*|\\[^(^\s]+\})(b|B)(f)` "mathbf" rA
\mathbf{`!p snip.rv = match.group(1)`}$0
endsnippet

context "math()"
snippet `(\\?[a-zA-Z0]\w*|\\[^(^\s]+\})(s|S)(f)` "matsf" rA
\mathsf{`!p snip.rv = match.group(1)`}$0
endsnippet

context "math()"
snippet `o\+` "oplus" rA
\oplus $0
endsnippet

context "math()"
snippet `op\.` "oplus2" rA
\oplus $0
endsnippet

priority 1000
context "math()"
snippet `o(x\.|\.x)` "otimes" rA
\otimes $0
endsnippet

context "math()"
snippet `(x\.|\.x)` "times" rA
\times $0
endsnippet

context "math()"
priority 100
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
priority 100
snippet blt "bullet" iA
\bullet
endsnippet

priority 100
context "math()"
snippet `(?<!\\)(sin|cos|tan|cot|csc|sec|ln|log|exp|perp|inf|sup|Tr|diag|rank|det|dim|ker|Im|Re|dom|min|max|sgn|OPT|land|lor)` "ops" rwA
\\`!p snip.rv = match.group(1)` 
endsnippet

priority 300
context "math()"
snippet `(?<!\\)a(sin|cos|tan|cot|csc|sec)` "arc-trigonometry" rwA
\\arc`!p snip.rv = match.group(1)` $0
endsnippet

priority 500
context "math()"
snippet coker "cokernel" wA
\coker $0
endsnippet

priority 300
context "math()"
snippet `a(max|min)` "arg min/max" rwA
\arg`!p snip.rv = match.group(1)`_{$1} $0
endsnippet

priority 1000
context "math()"
snippet tint "Triple Integral without anything" iA
\iiint\limits_{$1} $2 \\,\mathrm{d} $0
endsnippet

priority 10000
context "math()"
snippet dint "double integral without anything" iA
\iint\limits_{$1} $2 \\,\mathrm{d} $0
endsnippet

priority 1
context "math()"
snippet int "integral without anything" iA
\int $2 \\,\mathrm{d} $0
endsnippet

priority 1000
context "math()"
snippet oint "o integral" iA
\oint_{$1} ${2} \\,\mathrm{d} $0
endsnippet

priority 1000
context "math()"
snippet Tint "double integral without anything" iA
\int_{$1}^{$2}\int_{$3}^{$4}\int_{$5}^{$6} $7 \\,\mathrm{d} $8 \mathrm{d} $9 \mathrm{d} $0
endsnippet

priority 1000
context "math()"
snippet Dint "double integral without anything" iA
\int_{$1}^{$2}\int_{$3}^{$4} $5 \\,\mathrm{d} $6 \mathrm{d} $0
endsnippet

context "math()"
snippet Int "integral" iA
\int_{$1}^{$2} ${3} \\,\mathrm{d} $0
endsnippet

context "math()"
snippet Oint "o integral" iA
\oint_{$1}^{$2} ${3} \\,\mathrm{d} $0
endsnippet

priority 100
context "math()"
snippet -> "to" iA
\to 
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet inv "inverse" iA
^{-1}
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet -- "setminus" iA
\setminus
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet || "mid" iA
 \mid 
endsnippet

context "math()"
snippet `(?<!\\)sub ` "subset" rA
\subset $0
endsnippet

context "math()"
snippet sube "subseteq" iA
\subseteq $0
endsnippet

context "math()"
snippet subn "subsetneq" iA
\subsetneq $0
endsnippet

context "math()"
snippet nin "not in " iA
\notin 
endsnippet

priority 100
context "math()"
snippet `(?<!\\)scup` "disjoint union" rwA
\sqcup $0
endsnippet

context "math()"
snippet `(?<!\\)cup` "union" riA
\cup $0
endsnippet

context "math()"
snippet Cup "Union" wA
\bigcup_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet `(?<!\\)cap` "intersection" riA
\cap $0
endsnippet

context "math()"
snippet Cap "Intersection" wA
\bigcap_{${1:i}=${2:1}}^{${3:\infty}} $0
endsnippet

context "math()"
snippet ems "emptyset" iA
\varnothing
endsnippet

context "math()"
snippet tg "\triangle" iA
\lhd $0
endsnippet

context "math()"
snippet '(?<!i)sts' "text subscript" irA
_\text{$1} $0
endsnippet

context "math()"
snippet tet "text" iA
\text{$1}$0
endsnippet

context "math()"
snippet fun "function set notation, implicit name" iA
: $1 \to $0
endsnippet

priority 500
context "math()"
snippet `([a-zA-Z])fun` "function set notation" riA
`!p snip.rv = match.group(1)` : $1 \to $0
endsnippet

context "math()"
snippet `(b|B)(ar)` "bar" rA
\overline{$1} $0
endsnippet

priority 200
context "math()"
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(b|B)(ar)` "bar" rA
\overline{`!p snip.rv = match.group(1)`} $0
endsnippet

context "math()"
snippet Td "tilde" A
\widetilde{$1} $0
endsnippet

priority 500
context "math()"
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(Td)` "tilde" rA
\widetilde{`!p snip.rv = match.group(1)`} $0
endsnippet

context "math()"
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(h|H)(at)` "hat" rA
\hat{`!p snip.rv = match.group(1)`}$0
endsnippet

context "math()"
snippet `(\\?[a-zA-Z]\w*|\\[^(^\s]+\})(,\.|\.,)` "Vector postfix" rA
\vec{`!p snip.rv = match.group(1)`} $0
endsnippet

context "math()"
snippet `(?<![\\a-zA-Z])opn` "operator" rwA
\operatorname{$1}($2) $0
endsnippet

context "math()"
snippet `(~=|cong|iso)` "cong" riA
\cong $0
endsnippet

context "math()"
snippet ~- "approx equal(3)" iA
\simeq $0
endsnippet

context "math()"
snippet `(?<!\\)cir` "composition" rA
\circ $0
endsnippet

context "math()"
snippet `([a-zA-Z0-9])bra` "bra" riA
\bra{`!p snip.rv = match.group(1)`$1} $0
endsnippet

context "math()"
snippet `([a-zA-Z0-9])ket` "ket" riA
\ket{`!p snip.rv = match.group(1)`$1} $0
endsnippet

context "math()"
snippet bkt "braket" iA
\braket{$1}{$2} $0
endsnippet

context "math()"
snippet @> "inclusion" iA
\hookrightarrow $0
endsnippet

context "math()"
snippet 1..n "sequence" iA
$1_1, \dots, $1_n $0
endsnippet

#context "math()"
#snippet `([a-c-zA-Z])dot` "\dot" rwiA
#\dot{`!p snip.rv = match.group(1)`} $0
#endsnippet

context "math()"
snippet dot "\dot" wiA
\dot{$1} $0
endsnippet

context "math()"
snippet ind "indicator function" iA
\mathbbm{1}_{$1} $0
endsnippet

priority 200
context "math()"
snippet `(?<!\\)sim` "sim" rA
\sim $0
endsnippet

context "math()"
snippet apx "approx" iA
\approx $0
endsnippet

context "math()"
snippet `(?<!\\)bino` "binomial coefficient" rA
\binom{$1}{$2}$0
endsnippet

snippet `(?<!\\)emph` "emph" riA
\emph{$1}$0
endsnippet

context "math()"
snippet := "definition in math" iA
\coloneqq $0
endsnippet

context "math()"
snippet =: "definition in math" iA
\eqqcolon $0
endsnippet

snippet atf "\autoref{}" wA
\autoref{$1} $0
endsnippet

snippet hpr "\hyperref[]{}" wA
\hyperref[$1]{$2} $0
endsnippet

snippet lbl "\label{}" iA
\label{$1}
endsnippet

snippet dfn "definition" bA
\begin{definition}[$1]\label{dfn:$2}
	$0
\end{definition}
endsnippet

snippet thm "theorem" bA
\begin{theorem}[$1]\label{thm:$2}
	$0
\end{theorem}
endsnippet

snippet prpsn "proposition" bA
\begin{proposition}\label{prp:$1}
	$0
\end{proposition}
endsnippet

snippet lma "lemma" bA
\begin{lemma}\label{lma:$1}
	$0
\end{lemma}
endsnippet

priority 500
context "math()"
snippet tsim "tsim" iwA
\tildesim $0
endsnippet

context "math()"
snippet Hom "homorphism" iAw
\Hom($1 , $2) $0
endsnippet
context "math()"
snippet hom "homomorphism" iwA
\Hom_{$1}($2 , $3) $0
endsnippet

context "math()"
snippet End "endorphism" iAw
\End( $0 )
endsnippet
context "math()"
snippet end "endoorphism" iwA
\End_{\mathsf{$1}}( $2 ) $0
endsnippet

context "math()"
snippet Aut "autorphism" iAw
\Aut( $1 ) $0
endsnippet
context "math()"
snippet aut "automorphism" iwA
\Aut_{\mathsf{$1}}( $2 ) $0
endsnippet

context "math()"
snippet `(o|O)bj` "object" riAw
\Obj(\mathsf{ $1 }) $0
endsnippet

context "math()"
snippet mor "morphism" iA
\Morphism $0
endsnippet

context "math()"
snippet `(;m|mu)` "\mu" riA
\mu $0
endsnippet

context "math()"
snippet `(:m)` "\mu" riA
\boldsymbol{\mu} $0
endsnippet

context "math()"
snippet `(;a|alpha)` "\alpha" riA
\alpha $0
endsnippet

context "math()"
snippet `(:a)` "\alpha" riA
\boldsymbol{\alpha} $0
endsnippet

context "math()"
snippet `(;s|sigma)` "\sigma" riA
\sigma $0
endsnippet
context "math()"
snippet `(;S|Sigma)` "\Sigma" riA
\Sigma $0
endsnippet

context "math()"
snippet `(:s)` "\sigma" riA
\boldsymbol{\sigma} $0
endsnippet
context "math()"
snippet `(:S)` "\Sigma" riA
\boldsymbol{\Sigma} $0
endsnippet

context "math()"
snippet `(;b|beta)` "\beta" riA
\beta $0
endsnippet

context "math()"
snippet `(:b)` "\beta" riA
\boldsymbol{\beta} $0
endsnippet

context "math()"
snippet `(;g|gamma)` "\gamma" riA
\gamma $0
endsnippet
context "math()"
snippet `(;G|Gamma)` "\Gamma" riA
\Gamma $0
endsnippet

context "math()"
snippet `(:g)` "\gamma" riA
\boldsymbol{\gamma} $0
endsnippet
context "math()"
snippet `(:G)` "\Gamma" riA
\boldsymbol{\Gamma} $0
endsnippet

context "math()"
snippet `(;d|delta)` "\delta" riA
\delta $0
endsnippet
context "math()"
snippet `(;D|Delta)` "\Delta" riA
\Delta $0
endsnippet

context "math()"
snippet `(:d)` "\delta" riA
\boldsymbol{\delta} $0
endsnippet
context "math()"
snippet `(:D)` "\Delta" riA
\boldsymbol{\Delta} $0
endsnippet

context "math()"
snippet `(;z|zeta)` "\zeta" riA
\zeta $0
endsnippet

context "math()"
snippet `(:z)` "\zeta" riA
\boldsymbol{\zeta} $0
endsnippet

context "math()"
snippet `(;e|eta)` "\eta" riA
\eta $0
endsnippet

context "math()"
snippet `(:e)` "\eta" riA
\boldsymbol{\eta} $0
endsnippet

context "math()"
snippet `(;t|theta)` "\theta" riA
\theta $0
endsnippet
context "math()"
snippet `(;vt|vartheta)` "\vartheta" riA
\vartheta $0
endsnippet
context "math()"
snippet `(;T|Theta)` "\Theta" riA
\Theta $0
endsnippet

context "math()"
snippet `(:t)` "\theta" riA
\boldsymbol{\theta} $0
endsnippet
context "math()"
snippet `(:vt)` "\vartheta" riA
\boldsymbol{\vartheta} $0
endsnippet
context "math()"
snippet `(:T)` "\Theta" riA
\boldsymbol{\Theta} $0
endsnippet

priority 1000
context "math()"
snippet `(;;t|tau)` "\tau" riA
\tau $0
endsnippet

priority 1000
context "math()"
snippet `(::t)` "\tau" riA
\boldsymbol{\tau} $0
endsnippet

context "math()"
snippet `(;i|iota)` "\iota" riA
\iota $0
endsnippet

context "math()"
snippet `(:i)` "\iota" riA
\boldsymbol{\iota} $0
endsnippet

context "math()"
snippet `(;k|kappa)` "\kappa" riA
\kappa $0
endsnippet

context "math()"
snippet `(:k)` "\kappa" riA
\boldsymbol{\kappa} $0
endsnippet

context "math()"
snippet `(;l|lambda)` "\lambda" riA
\lambda $0
endsnippet
context "math()"
snippet `(;L|Lambda)` "\Lambda" riA
\Lambda $0
endsnippet

context "math()"
snippet `(:l)` "\lambda" riA
\boldsymbol{\lambda} $0
endsnippet
context "math()"
snippet `(:L)` "\Lambda" riA
\boldsymbol{\Lambda} $0
endsnippet

context "math()"
snippet `(;n|nu)` "\nu" riA
\nu $0
endsnippet

context "math()"
snippet `(:n)` "\nu" riA
\boldsymbol{\nu} $0
endsnippet

priority 1000
context "math()"
snippet `(;;n|nabla)` "\nabla" riA
\nabla $0
endsnippet

context "math()"
snippet `(;p|pi)` "\pi" riA
\pi $0
endsnippet
context "math()"
snippet `(;P|Pi)` "\Pi" \riA
\Pi $0
endsnippet

context "math()"
snippet `(:p)` "\pi" riA
\boldsymbol{\pi} $0
endsnippet
context "math()"
snippet `(:P)` "\Pi" riA
\boldsymbol{\Pi} $0
endsnippet

context "math()"
snippet `(;r|rho)` "\rho" riA
\rho $0
endsnippet

context "math()"
snippet `(:r)` "\rho" riA
\boldsymbol{\rho} $0
endsnippet

context "math()"
snippet `(;u|upsilon)` "\upsilon" riA
\upsilon $0
endsnippet
context "math()"
snippet `(;U|Upsilon)` "\Upsilon" riA
\Upsilon $0
endsnippet

context "math()"
snippet `(:u)` "\upsilon" riA
\boldsymbol{\upsilon} $0
endsnippet
context "math()"
snippet `(:U)` "\Upsilon" riA
\boldsymbol{\Upsilon} $0
endsnippet

priority 2000
context "math()"
snippet `(;;p|phi)` "\phi" riA
\phi $0
endsnippet
priority 2000
context "math()"
snippet `(;;P|Phi)` "\Phi" riA
\Phi $0
endsnippet
context "math()"
snippet `(;vp|varphi)` "\varphi" riA
\varphi $0
endsnippet

priority 2000
context "math()"
snippet `(::p)` "\phi" riA
\boldsymbol{\phi} $0
endsnippet
priority 2000
context "math()"
snippet `(::P)` "\Phi" riA
\boldsymbol{\Phi} $0
endsnippet
context "math()"
snippet `(:vp)` "\varphi" riA
\boldsymbol{\varphi} $0
endsnippet

context "math()"
snippet `(;c|chi)` "\chi" riA
\chi $0
endsnippet

context "math()"
snippet `(:c)` "\chi" riA
\boldsymbol{\chi} $0
endsnippet

priority 10000
context "math()"
snippet `(;;;p|psi)` "\psi" riA
\psi $0
endsnippet
priority 10000
context "math()"
snippet `(;;;P|Psi)` "\Psi" riA
\Psi $0
endsnippet

priority 10000
context "math()"
snippet `(:::p)` "\psi" riA
\boldsymbol{\psi} $0
endsnippet
priority 10000
context "math()"
snippet `(:::P)` "\Psi" riA
\boldsymbol{\Psi} $0
endsnippet

context "math()"
snippet `(;o|omega)` "\omega" riA
\omega $0
endsnippet
context "math()"
snippet `(;O|Omega)` "\Omega" riA
\Omega $0
endsnippet

context "math()"
snippet `(:o)` "\omega" riA
\boldsymbol{\omega} $0
endsnippet
context "math()"
snippet `(:O)` "\Omega" riA
\boldsymbol{\Omega} $0
endsnippet

context "math()"
snippet `(;x|xi)` "\xi" riA
\xi $0
endsnippet
context "math()"
snippet `(;X|Xi)` "\Xi" riA
\Xi $0
endsnippet

context "math()"
snippet `(:x)` "\xi" riA
\boldsymbol{\xi} $0
endsnippet
context "math()"
snippet `(:X)` "\Xi" riA
\boldsymbol{\Xi} $0
endsnippet

context "math()"
snippet eps "\epsilon" iA
\epsilon $0
endsnippet

priority 300
context "math()"
snippet `(;ve|vps)` "\vepsilon" riA
\varepsilon $0
endsnippet

priority 300
context "math()"
snippet `(::e)` "\epsilon" riA
\boldsymbol{\epsilon} $0
endsnippet

priority 300
context "math()"
snippet `(::ve)` "\vepsilon" riA
\boldsymbol{\varepsilon} $0
endsnippet

priority 100
context "math()"
snippet `(?<![\\a-zA-Z])ell` "\ell" riA
\ell $0
endsnippet

# vim:ft=snippets
